{"version":3,"file":"static/js/927.d4e6987b.chunk.js","mappings":"qSAGaA,EAAa,WACxB,OACE,6BACE,2BACEC,KAAM,CAACC,EAAAA,aAA8B,MAAfA,EAAAA,aAAuB,IAAM,QAGrD,SAAC,KAAa,CAACC,MAAO,GAAKC,aAAW,YACpC,SAAC,KAAQ,CAACC,OAAO,UAAUC,OAAO,UAAUC,MAAO,IAAKC,KAAM,UAItE,E,cCEMC,EAAkBC,EAAAA,MACtB,SAACC,GACC,OAA6BC,EAAAA,EAAAA,GAC3BC,yEADMC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAIf,OACE,kBAAOC,SAAU,CAAC,GAAGC,EAAAA,EAAAA,IAAU,IAAK,GAAG,UACrC,mCACMN,GAAK,IACTO,SAAUJ,EAAMK,qBAAqBD,SACrCE,SAAUL,EAAU,gBACpBM,QAAS,KACTL,SAAU,EAACC,EAAAA,EAAAA,KAAW,KAAKA,EAAAA,EAAAA,KAAW,KAAKA,EAAAA,EAAAA,IAAU,UAI7D,IACA,kBAAM,CAAI,IAGZ,EAAeP,EAAAA,MAAW,YAAuC,IAApCY,EAAO,EAAPA,QAAYX,GAAK,YAC5C,OACE,mBAAOW,QAASA,EAAQ,WACtB,SAACb,GAAe,UAAKE,KACrB,SAACX,EAAU,MAGjB,IAEAY,EAAAA,EAAAA,QAAgB,iC","sources":["layouts/ModelingLayout/Models/Earth/EarthLight/Atmosphere.tsx","layouts/ModelingLayout/Models/Earth/EarthLight/EarthLight.tsx"],"sourcesContent":["import { LayerMaterial, Gradient } from 'lamina'\r\nimport { EARTH_RADIUS } from '../Earth'\r\n\r\nexport const Atmosphere = () => {\r\n  return (\r\n    <mesh>\r\n      <sphereGeometry\r\n        args={[EARTH_RADIUS + EARTH_RADIUS * 0.0188, 1000, 1000]}\r\n      />\r\n\r\n      <LayerMaterial alpha={0.3} transparent>\r\n        <Gradient colorA='#318ce7' colorB='#a3cefa' start={100} end={-100} />\r\n      </LayerMaterial>\r\n    </mesh>\r\n  )\r\n}\r\n","import { useGLTF } from '@react-three/drei'\r\nimport { MeshProps } from '@react-three/fiber'\r\nimport React from 'react'\r\nimport * as THREE from 'three'\r\nimport { GLTF } from 'three-stdlib'\r\nimport { angleToPI } from 'utils'\r\nimport { Atmosphere } from './Atmosphere'\r\n\r\ntype GLTFResult = GLTF & {\r\n  nodes: {\r\n    Sphere_Material002_0: THREE.Mesh\r\n  }\r\n  materials: {\r\n    ['Material.002']: THREE.MeshStandardMaterial\r\n  }\r\n}\r\n\r\nconst EarthLightModel = React.memo(\r\n  (props: MeshProps) => {\r\n    const { nodes, materials } = useGLTF(\r\n      process.env.PUBLIC_URL + '/models/earth/light/scene.gltf',\r\n    ) as unknown as GLTFResult\r\n\r\n    return (\r\n      <group rotation={[0, angleToPI(90), 0]}>\r\n        <mesh\r\n          {...props}\r\n          geometry={nodes.Sphere_Material002_0.geometry}\r\n          material={materials['Material.002']}\r\n          dispose={null}\r\n          rotation={[angleToPI(-90), angleToPI(-25), angleToPI(100)]}\r\n        />\r\n      </group>\r\n    )\r\n  },\r\n  () => true,\r\n)\r\n\r\nexport default React.memo(({ visible, ...props }: MeshProps) => {\r\n  return (\r\n    <group visible={visible}>\r\n      <EarthLightModel {...props} />\r\n      <Atmosphere />\r\n    </group>\r\n  )\r\n})\r\n\r\nuseGLTF.preload('/models/earth/light/scene.gltf')\r\n"],"names":["Atmosphere","args","EARTH_RADIUS","alpha","transparent","colorA","colorB","start","end","EarthLightModel","React","props","useGLTF","process","nodes","materials","rotation","angleToPI","geometry","Sphere_Material002_0","material","dispose","visible"],"sourceRoot":""}