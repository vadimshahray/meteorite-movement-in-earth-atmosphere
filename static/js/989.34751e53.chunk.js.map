{"version":3,"file":"static/js/989.34751e53.chunk.js","mappings":"iRAGaA,EAAa,WACxB,OACE,6BACE,2BAAgBC,KAAM,CAAC,OAASC,EAAAA,GAA0B,IAAM,QAEhE,SAAC,KAAa,CAACC,MAAO,GAAKC,aAAW,YACpC,SAAC,KAAQ,CAACC,OAAO,UAAUC,OAAO,UAAUC,MAAO,IAAKC,KAAM,UAItE,E,UCKMC,EAAkBC,EAAAA,MAAW,SAACC,GAClC,OAA6BC,EAAAA,EAAAA,GAC3BC,yEADMC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAIf,OACE,yBACEC,SAAUF,EAAMG,qBAAqBD,SACrCE,SAAUH,EAAU,gBACpBI,QAAS,KACTC,SAAU,EAACC,EAAAA,EAAAA,KAAW,KAAKA,EAAAA,EAAAA,KAAW,KAAKA,EAAAA,EAAAA,IAAU,OACjDV,GAGV,IAEA,EAAeD,EAAAA,MAAW,YAA8B,IAA3BY,EAAO,EAAPA,QAC3B,OACE,mBAAOA,QAASA,EAAQ,WACtB,SAACb,EAAe,CAACc,MAAOrB,EAAAA,MAExB,SAACF,EAAU,MAGjB,IAEAY,EAAAA,EAAAA,QAAgB,iC","sources":["models/Earth/EarthLight/Atmosphere.tsx","models/Earth/EarthLight/EarthLight.tsx"],"sourcesContent":["import { LayerMaterial, Gradient } from 'lamina'\r\nimport { EARTH_LIGHT_RADIUS_SCALE } from '@constants'\r\n\r\nexport const Atmosphere = () => {\r\n  return (\r\n    <mesh>\r\n      <sphereGeometry args={[1.0188 * EARTH_LIGHT_RADIUS_SCALE, 1000, 1000]} />\r\n\r\n      <LayerMaterial alpha={0.3} transparent>\r\n        <Gradient colorA='#318ce7' colorB='#a3cefa' start={100} end={-100} />\r\n      </LayerMaterial>\r\n    </mesh>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport * as THREE from 'three'\r\nimport { angleToPI } from '@utils'\r\nimport { GLTF } from 'three-stdlib'\r\nimport { Atmosphere } from './Atmosphere'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { EARTH_LIGHT_RADIUS_SCALE } from '@constants'\r\nimport { GroupProps, MeshProps } from '@react-three/fiber'\r\n\r\ntype GLTFResult = GLTF & {\r\n  nodes: {\r\n    Sphere_Material002_0: THREE.Mesh\r\n  }\r\n  materials: {\r\n    ['Material.002']: THREE.MeshStandardMaterial\r\n  }\r\n}\r\n\r\nconst EarthLightModel = React.memo((props: MeshProps) => {\r\n  const { nodes, materials } = useGLTF(\r\n    process.env.PUBLIC_URL + '/models/earth/light/scene.gltf',\r\n  ) as unknown as GLTFResult\r\n\r\n  return (\r\n    <mesh\r\n      geometry={nodes.Sphere_Material002_0.geometry}\r\n      material={materials['Material.002']}\r\n      dispose={null}\r\n      rotation={[angleToPI(-90), angleToPI(-25), angleToPI(100)]}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\n\r\nexport default React.memo(({ visible }: GroupProps) => {\r\n  return (\r\n    <group visible={visible}>\r\n      <EarthLightModel scale={EARTH_LIGHT_RADIUS_SCALE} />\r\n\r\n      <Atmosphere />\r\n    </group>\r\n  )\r\n})\r\n\r\nuseGLTF.preload('/models/earth/light/scene.gltf')\r\n"],"names":["Atmosphere","args","EARTH_LIGHT_RADIUS_SCALE","alpha","transparent","colorA","colorB","start","end","EarthLightModel","React","props","useGLTF","process","nodes","materials","geometry","Sphere_Material002_0","material","dispose","rotation","angleToPI","visible","scale"],"sourceRoot":""}